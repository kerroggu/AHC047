AHC047参加記

1. リポジトリの初期化
AtCoder Heuristic Contest 047 に挑戦するためのリポジトリを作成し、Rustのビジュアライザおよび入力生成スクリプトなどの配布ファイルを追加した。

2. 最初のソルバー
まずa.cppに単純な決定的オートマトンを実装。最頻度の文字列を選び、その文字列をひたすら循環するマルコフ連鎖を出力する形からスタートした。

3. 複数文字列への対応
その後、得点の高い文字列を複数用いる方法を検討し、2文字列版、4文字列版と段階的に拡張。各文字列の遷移確率を41%で繋げる設計や、重複する遷移をまとめる工夫を行った。

4. 埋め込み型オートマトン
次に、文字列を逐次的に埋め込む手法を追加。各文字の状態を追加しながら必要に応じて新たな状態を確保し、残りの確率を均等に割り振る実装にした。順序を保ったまま複数文字列を取り込むアルゴリズムも検証した。

5. 焼きなまし導入
より高得点を狙うため、状態遷移を少しずつ変化させてスコアを探索する焼きなまし法を導入した。温度パラメータを設定し、確率的に遷移を受理・棄却する処理を追加した。

6. 最終版
最終的には行列を用いたスコア計算を高速化しつつ、焼きなましで遷移確率を調整する「matrix annealing solver」を実装した。

7. テスト
ソルバーは `run_all_par_sh.sh` をベースに、入力0000〜0014を対象としてスコアを確認した。ローカル環境ではテスターの依存関係が不足しており完全な検証はできなかったが、実行結果からある程度の改善を確認できた。

以上が今回の参加の流れである。今後はオフラインでもテストが完結するよう依存ツールを整備し、さらなるスコア向上を目指したい。
